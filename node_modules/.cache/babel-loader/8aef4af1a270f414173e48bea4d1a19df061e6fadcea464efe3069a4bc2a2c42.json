{"ast":null,"code":"import _toConsumableArray from\"/home/cintia/Documents/React-ToDo-App/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _defineProperty from\"/home/cintia/Documents/React-ToDo-App/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _classCallCheck from\"/home/cintia/Documents/React-ToDo-App/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/cintia/Documents/React-ToDo-App/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/home/cintia/Documents/React-ToDo-App/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/home/cintia/Documents/React-ToDo-App/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import'./App.css';import Checkbox from'@mui/material/Checkbox';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={newItem:\"\",list:[]};return _this;}_createClass(App,[{key:\"updateInput\",value:function updateInput(key,value){//update react state\nthis.setState(_defineProperty({},key,value));}},{key:\"addItem\",value:function addItem(){//create item with unique id\nvar newItem={id:1+Math.random(),value:this.state.newItem.slice()};//copy of current list of itens\nvar list=_toConsumableArray(this.state.list);//add new item to list\nlist.push(newItem);//update state with new list and reset newItem input \nthis.setState({list:list,newItem:\"\"});}},{key:\"deleteItem\",value:function deleteItem(id){//copy current list of items\nvar list=_toConsumableArray(this.state.list);//filter out item being deleted\nvar updatedList=list.filter(function(item){return item.id!==id;});this.setState({list:updatedList});}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Add a new task...\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your task here...\",value:this.state.newItem,onChange:function onChange(e){return _this2.updateInput(\"newItem\",e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return _this2.addItem();},children:\"Add\"}),/*#__PURE__*/_jsx(\"div\",{className:\"list\",children:/*#__PURE__*/_jsx(\"ul\",{children:this.state.list.map(function(item){return/*#__PURE__*/_jsx(\"div\",{className:\"task\",children:/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(Checkbox,{color:\"error\"}),/*#__PURE__*/_jsx(\"label\",{className:\"item\",children:item.value}),/*#__PURE__*/_jsx(\"label\",{className:\"delete\",children:/*#__PURE__*/_jsx(\"button\",{className:\"delete-button\",onClick:function onClick(){return _this2.deleteItem(item.id);},children:\"Delete\"})})]},item.id)});})})})]})});}}]);return App;}(Component);export default App;","map":{"version":3,"names":["React","Component","Checkbox","App","props","state","newItem","list","key","value","setState","id","Math","random","slice","push","updatedList","filter","item","e","updateInput","target","addItem","map","deleteItem"],"sources":["/home/cintia/Documents/React-ToDo-App/src/App.js"],"sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport Checkbox from '@mui/material/Checkbox';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n      newItem:\"\",\n      list:[]\n    }\n  }\n\n  updateInput(key, value){\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n  addItem(){\n    //create item with unique id\n    const newItem={\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n\n    //copy of current list of itens\n    const list = [...this.state.list];\n\n    //add new item to list\n    list.push(newItem);\n\n    //update state with new list and reset newItem input \n    this.setState({\n      list, \n      newItem:\"\"\n    });\n  }\n  deleteItem(id){\n    //copy current list of items\n    const list = [...this.state.list];\n\n    //filter out item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({list:updatedList});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"card\">\n            <h1 className=\"title\">Add a new task...</h1>\n              \n              <input \n                type=\"text\"\n                placeholder=\"Type your task here...\"\n                value={this.state.newItem}\n                onChange={e => this.updateInput(\"newItem\", e.target.value)}\n              />\n              \n              <button onClick={() => this.addItem()}>\n                Add\n              </button>\n\n              <div className=\"list\">\n\n                <ul>\n                    {this.state.list.map(item => {\n                      \n                      return(\n                        <div className=\"task\">\n                          <ul key={item.id}>\n\n                          <Checkbox color=\"error\"/>\n                                \n                            <label className=\"item\">\n                              {item.value}\n                            </label>\n                                \n                            <label className=\"delete\">\n                              <button className=\"delete-button\" onClick={() => this.deleteItem(item.id)}>\n                                Delete\n                              </button>\n                            </label>\n                          </ul>\n                        </div>\n                      )\n                    })}\n                </ul>\n              </div>\n          </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"],"mappings":"4tBAAA,MAAOA,MAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,WAAW,CAClB,MAAOC,SAAQ,KAAM,wBAAwB,CAAC,2FAExCC,IAAG,0FACP,aAAYC,KAAK,CAAC,qCAChB,uBAAMA,KAAK,EAEX,MAAKC,KAAK,CAAC,CACTC,OAAO,CAAC,EAAE,CACVC,IAAI,CAAC,EACP,CAAC,cACH,CAAC,2CAED,qBAAYC,GAAG,CAAEC,KAAK,CAAC,CACrB;AACA,IAAI,CAACC,QAAQ,oBACVF,GAAG,CAAGC,KAAK,EACZ,CACJ,CAAC,uBACD,kBAAS,CACP;AACA,GAAMH,QAAO,CAAC,CACZK,EAAE,CAAE,CAAC,CAAGC,IAAI,CAACC,MAAM,EAAE,CACrBJ,KAAK,CAAE,IAAI,CAACJ,KAAK,CAACC,OAAO,CAACQ,KAAK,EACjC,CAAC,CAED;AACA,GAAMP,KAAI,oBAAO,IAAI,CAACF,KAAK,CAACE,IAAI,CAAC,CAEjC;AACAA,IAAI,CAACQ,IAAI,CAACT,OAAO,CAAC,CAElB;AACA,IAAI,CAACI,QAAQ,CAAC,CACZH,IAAI,CAAJA,IAAI,CACJD,OAAO,CAAC,EACV,CAAC,CAAC,CACJ,CAAC,0BACD,oBAAWK,EAAE,CAAC,CACZ;AACA,GAAMJ,KAAI,oBAAO,IAAI,CAACF,KAAK,CAACE,IAAI,CAAC,CAEjC;AACA,GAAMS,YAAW,CAAGT,IAAI,CAACU,MAAM,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACP,EAAE,GAAKA,EAAE,GAAC,CAEvD,IAAI,CAACD,QAAQ,CAAC,CAACH,IAAI,CAACS,WAAW,CAAC,CAAC,CACnC,CAAC,sBAED,iBAAQ,iBACN,mBACE,YAAK,SAAS,CAAC,KAAK,uBAClB,aAAK,SAAS,CAAC,MAAM,wBACjB,WAAI,SAAS,CAAC,OAAO,UAAC,mBAAiB,EAAK,cAE1C,cACE,IAAI,CAAC,MAAM,CACX,WAAW,CAAC,wBAAwB,CACpC,KAAK,CAAE,IAAI,CAACX,KAAK,CAACC,OAAQ,CAC1B,QAAQ,CAAE,kBAAAa,CAAC,QAAI,OAAI,CAACC,WAAW,CAAC,SAAS,CAAED,CAAC,CAACE,MAAM,CAACZ,KAAK,CAAC,EAAC,EAC3D,cAEF,eAAQ,OAAO,CAAE,yBAAM,OAAI,CAACa,OAAO,EAAE,EAAC,UAAC,KAEvC,EAAS,cAET,YAAK,SAAS,CAAC,MAAM,uBAEnB,oBACK,IAAI,CAACjB,KAAK,CAACE,IAAI,CAACgB,GAAG,CAAC,SAAAL,IAAI,CAAI,CAE3B,mBACE,YAAK,SAAS,CAAC,MAAM,uBACnB,mCAEA,KAAC,QAAQ,EAAC,KAAK,CAAC,OAAO,EAAE,cAEvB,cAAO,SAAS,CAAC,MAAM,UACpBA,IAAI,CAACT,KAAK,EACL,cAER,cAAO,SAAS,CAAC,QAAQ,uBACvB,eAAQ,SAAS,CAAC,eAAe,CAAC,OAAO,CAAE,yBAAM,OAAI,CAACe,UAAU,CAACN,IAAI,CAACP,EAAE,CAAC,EAAC,UAAC,QAE3E,EAAS,EACH,GAZDO,IAAI,CAACP,EAAE,CAaX,EACD,CAEV,CAAC,CAAC,EACD,EACD,GACJ,EACJ,CAEV,CAAC,iBA3FeV,SAAS,EA6F3B,cAAeE,IAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}