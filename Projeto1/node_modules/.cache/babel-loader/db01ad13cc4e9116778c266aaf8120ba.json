{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cintia\\\\Documents\\\\to-do-list\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    //create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    }; //copy of current list of itens\n\n    const list = [...this.state.list]; //add new item to list\n\n    list.push(newItem); //update state with new list and reset newItem input \n\n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Add a new task...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type your task here...\",\n          value: this.state.newItem,\n          onChange: e => this.updateInput(\"newItem\", e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.addItem(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Cintia/Documents/to-do-list/src/App.js"],"names":["React","Component","App","constructor","props","state","newItem","list","updateInput","key","value","setState","addItem","id","Math","random","slice","push","render","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACTC,MAAAA,OAAO,EAAC,EADC;AAETC,MAAAA,IAAI,EAAC;AAFI,KAAX;AAID;;AAGDC,EAAAA,WAAW,CAACC,GAAD,EAAMC,KAAN,EAAY;AACrB;AACA,SAAKC,QAAL,CAAc;AACZ,OAACF,GAAD,GAAOC;AADK,KAAd;AAGD;;AACDE,EAAAA,OAAO,GAAE;AACP;AACA,UAAMN,OAAO,GAAC;AACZO,MAAAA,EAAE,EAAE,IAAIC,IAAI,CAACC,MAAL,EADI;AAEZL,MAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,OAAX,CAAmBU,KAAnB;AAFK,KAAd,CAFO,CAOP;;AACA,UAAMT,IAAI,GAAG,CAAC,GAAG,KAAKF,KAAL,CAAWE,IAAf,CAAb,CARO,CAUP;;AACAA,IAAAA,IAAI,CAACU,IAAL,CAAUX,OAAV,EAXO,CAaP;;AACA,SAAKK,QAAL,CAAc;AACZJ,MAAAA,IADY;AAEZD,MAAAA,OAAO,EAAC;AAFI,KAAd;AAID;;AACDY,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAA,qDAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,wBAFd;AAGE,UAAA,KAAK,EAAE,KAAKb,KAAL,CAAWC,OAHpB;AAIE,UAAA,QAAQ,EAAEa,CAAC,IAAI,KAAKX,WAAL,CAAiB,SAAjB,EAA4BW,CAAC,CAACC,MAAF,CAASV,KAArC;AAJjB;AAAA;AAAA;AAAA;AAAA,gBAHF,eASE;AACE,UAAA,OAAO,EAAE,MAAM,KAAKE,OAAL,EADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAxDyB;;AA0D5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n      newItem:\"\",\n      list:[]\n    }\n  }\n\n\n  updateInput(key, value){\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n  addItem(){\n    //create item with unique id\n    const newItem={\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n\n    //copy of current list of itens\n    const list = [...this.state.list];\n\n    //add new item to list\n    list.push(newItem);\n\n    //update state with new list and reset newItem input \n    this.setState({\n      list, \n      newItem:\"\"\n    });\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <div>\n          Add a new task...\n          <br/>\n          <input \n            type=\"text\"\n            placeholder=\"Type your task here...\"\n            value={this.state.newItem}\n            onChange={e => this.updateInput(\"newItem\", e.target.value)}\n          />\n          <button\n            onClick={() => this.addItem()}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}