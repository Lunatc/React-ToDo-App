{"ast":null,"code":"var _jsxFileName = \"/home/cintia/Documents/React-ToDo-App/Projeto1/to-do/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n  updateInput(key, value) {\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n  addItem() {\n    //create item with unique id\n    const newItem = {\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n\n    //copy of current list of itens\n    const list = [...this.state.list];\n\n    //add new item to list\n    list.push(newItem);\n\n    //update state with new list and reset newItem input \n    this.setState({\n      list,\n      newItem: \"\"\n    });\n  }\n  deleteItem(id) {\n    //copy current list of items\n    const list = [...this.state.list];\n\n    //filter out item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedList\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"title\",\n          children: [\"Add a new task...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Type your task here...\",\n            value: this.state.newItem,\n            onChange: e => this.updateInput(\"newItem\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.addItem(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: this.state.list.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  class: \"container\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"checkmark\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  class: \"item\",\n                  children: item.value\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  class: \"container2\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => this.deleteItem(item.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","App","constructor","props","state","newItem","list","updateInput","key","value","setState","addItem","id","Math","random","slice","push","deleteItem","updatedList","filter","item","render","e","target","map"],"sources":["/home/cintia/Documents/React-ToDo-App/Projeto1/to-do/src/App.js"],"sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state={\n      newItem:\"\",\n      list:[]\n    }\n  }\n\n\n  updateInput(key, value){\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n  addItem(){\n    //create item with unique id\n    const newItem={\n      id: 1 + Math.random(),\n      value: this.state.newItem.slice()\n    };\n\n    //copy of current list of itens\n    const list = [...this.state.list];\n\n    //add new item to list\n    list.push(newItem);\n\n    //update state with new list and reset newItem input \n    this.setState({\n      list, \n      newItem:\"\"\n    });\n  }\n  deleteItem(id){\n    //copy current list of items\n    const list = [...this.state.list];\n\n    //filter out item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({list:updatedList});\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <div class=\"card\">\n          <div class=\"title\">\n            Add a new task...\n            <br/>\n            <input \n              type=\"text\"\n              placeholder=\"Type your task here...\"\n              value={this.state.newItem}\n              onChange={e => this.updateInput(\"newItem\", e.target.value)}\n            />\n            <button\n              onClick={() => this.addItem()}\n            >\n              Add\n            </button>\n            <br/>\n            <ul>\n              {this.state.list.map(item => {\n                return(\n                  <ul key={item.id}>\n                    <label class=\"container\">\n                      <input type=\"checkbox\"/>\n                      <span class=\"checkmark\"></span>\n                    </label>\n                    <label class=\"item\">\n                      {item.value}\n                    </label>\n                    <label class=\"container2\">\n                      <button\n                      onClick={() => this.deleteItem(item.id)}\n                      >\n                      Delete\n                      </button>\n                    </label>\n                  </ul>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}